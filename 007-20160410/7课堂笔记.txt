1.接口测试  python
    import request urllib2 urlopen


    mock post code in a.py
    define api code in a.py
    单个api的测试 b.py
    符合业务链路的多api组合测试 c.py
    接口测试的数据：csv、xml、txt


    能封装的业务方法封装
    能参数话的就用类似java的testng的方法配置掉

    report:
    import HTMLTestRunner

2.专项测试

    什么是专项测试？
        一切影响用户体验的点都属于专项，开始都称为性能
        流畅度，电量，流量，内存泄露，界面响应时间，绘制时间，代码响应时间，界面跳转时间，网络消耗的时间，api消耗的时间
        专项很少有期望结果，开始是没有的，可以由公司来定，定一个基线，可能是比较粗的，不可能将所有手机的基线都定出来



    专项测试产出的东西
        专项测试所产出的数据，或者说一切可以量化的东西。想尽一切办法量化，一定要可量化，且颗粒度一定要细，尽所能的细。


    做专项测试之前我们要做什么？
        不是说做就可以做的
        1.做专项的目的：用户体验得到提升，性能得到提升，问题要被解决掉，性能得到提升。
        2.所有的专项都是白盒测试，黑盒测试出来的专项没有意义。除了IOS一些比较封闭的情况
        3.专项大部分还是手工的测试，但需要有自动化的辅助，意味着这个人或者这个团队要具备自动化的能力，一定可以快速的实现自动化
        4.一定要会使用插桩和埋点，来获取动态数据，来满足专项测试的需要


    专项中可能用到的辅助点
        可能运用到各种各样开源的工具，可能用到各种各样硬件上的工具，也可能用到自动化，并且熟练，否则会比较难。


    专项测试的流程
        专项会不会很闲，容易招到质疑。
        测试前：
            1.测试计划：定测试哪些场景，具体化的，与业务强绑定
            每一个场景要做哪些专项测试，比如有25项，每一个场景做哪些，要定清楚
            工具：定死。要写明用到哪些工具，版本是什么，在什么环境去测试，比如有很多套测试环境，要在哪个环境。工具产出的是什么，比如是ms还是百分比。用哪些机型，要写清楚。网络环境是什么，2G,3G,网络的方式是什么，是真的SIM卡，还是模拟，如果是模拟，比如何定义2G，上行下行，delay。。。。竞品分析，有哪些竞品，分析哪些，与我们产品的区别，
            大概花多少时间，多少个人日，多少个人，有哪些人
            2.准备环境：调试通环境，开发库怎么连的，XXXXXX
            3.有root和越狱机器
            4.code review，熟悉产品和开发的代码，对产品做更好的理解，更高效率的做静态和动态的插装

        测试中
            主动来做的专项
            1. 需要不停的与开发沟通，优先级最高的就是测试开发把握比较大，不会做改动或者重构
            2. 选择模块来进行测试，根据项目的周期按天或者按周汇报
                比如A模块，对应5个业务功能，需要做10种专项，但是因为还没有完全开发完成，所以只能测试针对这个模块或者针对这个业务功能最有影响的专项来做

        测试报告：本次专项所属环境是什么，测试了哪些场景，测了哪些类型，使用了哪些机型，在哪些网络环境下，与哪些竞品做了分析，分别每一类型在每种业务场景下面数值是什么，这个数值与我们的基线对比是高了还是低了。

        灰度和发布：
            线上数据的搜集（埋点和插装)：
                1.定义清楚到底要什么数据：需要与开发与PD（产品经理）一起定义清楚我们需要哪些数据
                2.定义清楚数据结构：哪些是定死的，哪些是可扩展的
                3.定义埋点的位置：比如开始和结束，可以是系统层面的开始和结束，也可以是APP层面的开始和结束，也可以是业务层面的开始和结束，到底需要哪一样要想清楚
                4.测试埋点的位置
                5.定义数据如何搜集：A数据在a文件里，往a服务器上传
                6.持续分析：需要对T-1的数据进行分析，显示的在后台上

                    如果要做，需要有自己的一个sdk，每个界面停留多少时间，有哪些元素，点了哪些东西这些要写在公共组件里，个性的业务方来做，要把握好这个区分的度

                    app框架层面：crash日志 阻拦组件和业务方的crash
                    app组件层面：页面的停车时间，每个按钮的点击时间，每个界面业务链路流动BI，组件对应的特性的细节（网络，图片，activity。。。）
                    业务层面：业务直接对应的细节，比如定位的业务，定位的耗时

            研发过程中：
            MonkeyTest

            Android，IOS

            IOS，IOS——monkey，

            希望拿到Crash和ANR

            APP需要有一套完整的crash上报的机制
            灰度之后，按天，24小时执行的机制。
            日清。monkey跑出来的bug还是机制回收的bug，我们都需要每天fix掉。
            可以放到持续集成里面，进入灰度就要持续的跑


            1. 电量：选择场景，缩小问题范围，找到问题，定位问题，解决问题
                1.正向测试电量，百分比：android，IOS，setting 评估可以找竞品
                    通过自动化的方式，来获取自动化前和自动化后的电量百分比
                2.反向电量测试：优化，间接优化电量消耗
                    反向电量测试方法：测试在一下几种情况下重试机制、缓存机制的电量消耗，以便优化这些策略
                    1.wakelock
                        battery-histrain工具，可以在github上面找到
                        可以将wakelock图形化找到
                        
                    2.弱网
                        模拟热点，模拟代理的方式
                        热点：IOS开发者者模式，ATC
                        代理：charles
                        delay，网络delay，最大传输字节
                    3.特殊的场景或者功能
                        LBS
                        怎么测：一个服务
                        功能测试去测，还是专项测试去测：专项
                        重新定位的策略，超时的策略，缓存的策略
                        服务端保存数据的超时的策略，从服务端获取数据的策略
                        重试的策略
                        login retry3次，变成N次
                        仅仅是因为弱网的原因，发送请求的异步操作有bug

                    4.memory和cpu：
                        android：Android Studio里面的memory monitor
                        IOS：越狱之后，ssh登录，top


    

作业：
1.使用java的httpclient或者okhttpclient来编写api 测试用例
2.battery-histrain，adb shell dumpsys batteryinfo还是batterystatus去查看wakelock


疑问：
token是什么？
rd?是什么？？
mock测试（一种测试类型）是什么？插装埋点（一种方法或者工具，分静态和动态）是啥？
LBS是啥？
